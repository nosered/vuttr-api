{
    "openapi": "3.0.2",
    "info": {
        "version": "1.0.0",
        "title": "VUTTR",
        "description": "Very Useful Tools To Remember API",
        "contact": {
            "name": "Ederson Abreu",
            "email": "ederson@esabreu.eti.br",
            "url": "https://esabreu.eti.br"
        },
        "license": { "name": "MIT License", "url": "https://www.mit.edu/~amini/LICENSE.md" }
    },
    "servers": [
        { "url": "http://localhost:3000/", "description": "Local server" },
        { "url": "https://vuttr-api.herokuapp.com", "description": "Heroku Cloud" }
    ],
    "tags": [
        { "name": "AUTH" },
        { "name": "USERS" },
        { "name": "TOOLS" }
    ],
    "paths": {
        "/auth/token": {
            "post": {
                "tags": [ "AUTH" ],
                "description": "Get Authentication Tokens",
                "operationId": "getToken",
                "security": [
                    { "basic": [] }
                ],
                "requestBody": {
                    "description": "When use refresh_token to get a new access_token no need fill username and password",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCredentials"
                            },
                            "example": {
                                "grant_type": "password",
                                "username": "edersonabreu@email.com",
                                "password": "1234"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The refresh token is returned in a HttpOnly Cookie named `refresh_token`.",
                        "headers": {
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string",
                                    "example": "refresh_token=eyJhbGciOiJIUzI1NiIsInR56Ikp.eyJlbWFpbCI6InN5c2FkbWluQGVtYWlsLmNvsImlhTU4MzE2OTI1NywiZXhwIjoxNTgzMjU1NjU3fQ.G4WZ1QzQX2o9GO97niHsWiy4mTUlg-t8Enk; path=/; domain=localhost; HttpOnly; Expires=Tue, 03 Mar 2020 17:14:17 GMT;"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGET"
                                },
                                "example": {
                                    "access_token": "eyJhbGciOiJIUzIIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InN5kbWluQGVtYWlsLmNvbSIsImlhdCI6MTU4MzE2OTI1NywiZXhwIjoxNTgzMTcyODU3fQ.SXkApjUwYnhHigEAJSbIesFf2NLq65hTSkozveXY",
                                    "expires_in": 3600
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [ "AUTH" ],
                "description": "Revoke refresh token from HttpOnly Cookie",
                "operationId": "revokeToken",
                "responses": {
                    "204": {
                        "description": "The HttpOnly cookie `refresh_token` is removed."
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [ "USERS" ],
                "description": "add a new User",
                "operationId": "addUser",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPOST"
                            },
                            "example": {
                                "firstName": "Ederson",
                                "lastName": "Abreu",
                                "email": "edersonabreu@email.com",
                                "password": "1234"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGET"
                                },
                                "example": {
                                    "id": 1,
                                    "firstName": "Ederson",
                                    "lastName": "Abreu",
                                    "email": "edersonabreu@email.com",
                                    "createdAt": "2020-01-01 00:00:00",
                                    "updatedAt": "2020-01-01 00:00:00"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error400"
                                },
                                "example": {
                                    "statusCode": "400",
                                    "message": "BAD REQUEST",
                                    "errors": [
                                        {
                                            "value": "",
                                            "msg": "Invalid value",
                                            "param": "description",
                                            "location": "body"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error4xx"
                                },
                                "example": {
                                    "statusCode": "401",
                                    "message": "UNAUTHORIZED",
                                    "errors": "INVALID TOKEN"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error5xx"
                                },
                                "example": {
                                    "statusCode": 500,
                                    "message": "INTERNAL SERVER ERROR"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tools": {
            "get": {
                "tags": [ "TOOLS" ],
                "description": "list tools",
                "operationId": "listTools",
                "parameters": [
                    { "in": "query", "name": "tag", "schema": { "type": "string" }, "required": false  }
                ],
                "security": [
                    { "bearer": [] }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolsGET"
                                },
                                "example": [
                                    {
                                        "id": 1,
                                        "title": "Notion",
                                        "link": "https://notion.so",
                                        "description": "All in one tool to organize teams and ideas. Write, plan, collaborate, and get organized.",
                                        "tags": [
                                            "organization",
                                            "planning",
                                            "collaboration",
                                            "writing",
                                            "calendar"
                                        ]
                                    },
                                    {
                                        "id": 2,
                                        "title": "json-server",
                                        "link": "https://github.com/typicode/json-server",
                                        "description": "Fake REST API based on a json schema. Useful for mocking and creating APIs for front-end devs to consume in coding challenges.",
                                        "tags": [
                                            "api",
                                            "json",
                                            "schema",
                                            "node",
                                            "github",
                                            "rest"
                                        ]
                                    },
                                    {
                                        "id": 3,
                                        "title": "fastify",
                                        "link": "https://www.fastify.io/",
                                        "description": "Extremely fast and simple, low-overhead web framework for NodeJS. Supports HTTP2.",
                                        "tags": [
                                            "web",
                                            "framework",
                                            "node",
                                            "http2",
                                            "https",
                                            "localhost"
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error4xx"
                                },
                                "example": {
                                    "statusCode": "401",
                                    "message": "UNAUTHORIZED",
                                    "errors": "INVALID TOKEN"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error5xx"
                                },
                                "example": {
                                    "statusCode": 500,
                                    "message": "INTERNAL SERVER ERROR"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [ "TOOLS" ],
                "description": "add a new Tool",
                "operationId": "addTool",
                "parameters": [],
                "security": [
                    { "bearer": [] }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolPOST"
                            },
                            "example": {
                                "title": "Notion",
                                "link": "https://notion.so",
                                "description": "All in one tool to organize teams and ideas. Write, plan, collaborate, and get organized.",
                                "tags": [
                                    "organization",
                                    "planning",
                                    "collaboration",
                                    "writing",
                                    "calendar"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolGET"
                                },
                                "example": {
                                    "id": 1,
                                    "title": "Notion",
                                    "link": "https://notion.so",
                                    "description": "All in one tool to organize teams and ideas. Write, plan, collaborate, and get organized.",
                                    "tags": [
                                        "organization",
                                        "planning",
                                        "collaboration",
                                        "writing",
                                        "calendar"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error400"
                                },
                                "example": {
                                    "statusCode": "400",
                                    "message": "BAD REQUEST",
                                    "errors": [
                                        {
                                            "value": "",
                                            "msg": "Invalid value",
                                            "param": "description",
                                            "location": "body"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error4xx"
                                },
                                "example": {
                                    "statusCode": "401",
                                    "message": "UNAUTHORIZED",
                                    "errors": "INVALID TOKEN"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error5xx"
                                },
                                "example": {
                                    "statusCode": 500,
                                    "message": "INTERNAL SERVER ERROR"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "basic": {
                "type": "http",
                "scheme": "basic"
            },
            "bearer": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "UserGET": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1234
                    },
                    "firstName": {
                        "type": "string",
                        "example": "Ederson"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Abreu"
                    },
                    "email": {
                        "type": "string",
                        "example": "edersonabreu@email.com"
                    },
                    "createdAt": {
                        "type": "string",
                        "example": "2020-01-01 00:00:00"
                    },
                    "updatedAt": {
                        "type": "string",
                        "example": "2020-01-01 00:00:00"
                    }
                }
            },
            "UserPOST": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "example": "Ederson"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Abreu"
                    },
                    "email": {
                        "type": "string",
                        "example": "edersonabreu@email.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "1234"
                    }
                },
                "required": [ "firstName", "lastName", "email", "password" ]
            },
            "ToolGET": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "fastify"
                    },
                    "link": {
                        "type": "string",
                        "example": "https://www.fastify.io/"
                    },
                    "description": {
                        "type": "string",
                        "example": "Extremely fast and simple, low-overhead web framework for NodeJS. Supports HTTP2."
                    },
                    "tags": {
                        "type": "array",
                        "example": [
                            "web",
                            "framework",
                            "node",
                            "http2",
                            "https",
                            "localhost"
                        ]
                    }
                }
            },
            "ToolsGET": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ToolGET"
                }
            },
            "ToolPOST": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "fastify"
                    },
                    "link": {
                        "type": "string",
                        "example": "https://www.fastify.io/"
                    },
                    "description": {
                        "type": "string",
                        "example": "Extremely fast and simple, low-overhead web framework for NodeJS. Supports HTTP2."
                    },
                    "tags": {
                        "type": "array",
                        "example": ["web", "framework", "node", "http2", "https", "localhost"]
                    }
                },
                "required": ["title", "link", "description", "tags"]
            },
            "UserCredentials": {
                "type": "object",
                "properties": {
                    "grant_type": {
                        "type": "string",
                        "enum": [ "password", "refresh_token" ],
                        "default": "password"
                    },
                    "username": {
                        "type": "string",
                        "example": "edersonabreu@email.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "1234"
                    }
                },
                "required": [ "grant_type" ]
            },
            "Error400": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array"
                    }
                }
            },
            "Error4xx": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "string"
                    }
                }
            },
            "Error5xx": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}